{
	
	"cpp sample code": {
		"prefix": "cppsample",
		"body": [
			"#include<bits/stdc++.h>",
			"using namespace std;\n",
			"#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);",
			"#define ll long long \n",
			"int main(){\n",
			"    $1\n",
			"    return 0;",
			"}"
		],
		"description": "cpp sample code"
	},
	"cppcoding": {
		"prefix": "cppcoding",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;\n",
			"#define fast ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);",
			"#define ll long long",
			"#define uli unsigned long int\n",
			"class Util {",
			"  public:",
			"    template <typename T> void printSet(const set<T> &s) {",
			"        for (const auto &element : s) {",
			"            cout << element << \" \";",
			"        }",
			"        cout << endl;",
			"    }",
			"    template <typename T> void printVector(const vector<T> &v) {",
			"        for (const auto &element : v) {",
			"            cout << element << \" \";",
			"        }",
			"        cout << endl;",
			"    }",
			"    template <typename T> void print2DVector(const vector<vector<T>> &vec) {",
			"        for (const auto &row : vec) {",
			"            for (const auto &element : row) {",
			"                cout << element << \" \";",
			"            }",
			"            cout << endl;",
			"        }",
			"    }",
			"};\n",
			"Util util;\n",
			"class Solution {",
			"  public:",
			"    int solve(vector<int> &nums) {",
			"        int n = nums.size();",
			"        int ans = 0;",
			"        $1",
			"        return ans;",
			"    }",
			"};\n",
			"Solution sol;\n",
			"int main() {",
			"    freopen(\"inputs.txt\",\"r\",stdin);",
			"    freopen(\"oututs.txt\",\"w\",stdout);",
			"    vector<int> nums{1, 3, 1};",
			"    int res = sol.solve(nums);",
			"    cout << \"res : \" << res << endl;\n",
			"    return 0;",
			"}\n",
			"auto init = []() {",
			"    ios::sync_with_stdio(false);",
			"    cin.tie(nullptr);",
			"    cout.tie(nullptr);",
			"    return 'c';",
			"}();"
		],
		"description": "C++ coding template with utility functions and solution class"
	},
	"cppcompete": {
		"prefix": "cppcompete",
		"body": [
			"/*",
			"    ॐ नमः शिवाय | ",
			"*/",
			"",
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"",
			"#define fast ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);",
			"#define ll long long",
			"#define uli unsigned long int",
			"",
			"//#define int            long long int",
			"#define F              first",
			"#define S              second",
			"#define pb             push_back",
			"#define si             set <int>",
			"#define vi             vector <int>",
			"#define pii            pair <int, int>",
			"#define vpi            vector <pii>",
			"#define vpp            vector <pair<int, pii>>",
			"#define mii            map <int, int>",
			"#define mpi            map <pii, int>",
			"#define spi            set <pii>",
			"#define endl           \"\\n\"",
			"#define sz(x)          ((int) x.size())",
			"#define all(p)         p.begin(), p.end()",
			"//#define double         long double",
			"#define que_max        priority_queue <int>",
			"#define que_min        priority_queue <int, vi, greater<int>>",
			"#define bug(...)       __f (#__VA_ARGS__, __VA_ARGS__)",
			"#define print(a)       for(auto x : a) cout << x << \" \"; cout << endl",
			"#define print1(a)      for(auto x : a) cout << x.F << \" \" << x.S << endl",
			"#define print2(a,x,y)  for(int i = x; i < y; i++) cout<< a[i]<< \" \"; cout << endl",
			"#define print2DVector(vec) { for (const auto &row : vec) { for (const auto &element : row) cout << element << \" \"; cout << endl; } }",
			"",
			"inline int power(int a, int b)",
			"{",
			"    int x = 1;",
			"    while (b)",
			"    {",
			"        if (b & 1) x *= a;",
			"        a *= a;",
			"        b >>= 1;",
			"    }",
			"    return x;",
			"}",
			"",
			"template <typename Arg1>",
			"void __f (const char* name, Arg1&& arg1) { cout << name << \" : \" << arg1 << endl; }",
			"template <typename Arg1, typename... Args>",
			"void __f (const char* names, Arg1&& arg1, Args&&... args)",
			"{",
			"    const char* comma = strchr (names + 1, ',');",
			"    cout.write (names, comma - names) << \" : \" << arg1 << \" | \"; __f (comma + 1, args...);",
			"}",
			"",
			"class Solution {",
			"  public:",
			"    int solve(vector<int> &nums) {",
			"        int n = nums.size();",
			"        int ans = 0;",
			"        $1",
			"        return ans;",
			"    }",
			"};",
			"",
			"Solution sol;",
			"",
			"int32_t main() {",
			"",
			"    #ifndef ONLINE_JUDGE",
			"        freopen(\"inputs.txt\",  \"r\",  stdin);",
			"        freopen(\"outputs.txt\", \"w\", stdout);",
			"    #endif",
			"",
			"    vector<int> nums{1, 3, 1};",
			"    int res = sol.solve(nums);",
			"",
			"    bug(res);",
			"    ",
			"    return 0;",
			"}",
			"",
			"auto init = []() {",
			"    ios::sync_with_stdio(false);",
			"    cin.tie(nullptr);",
			"    cout.tie(nullptr);",
			"    return 'c';",
			"}();"
		],
		"description": "C++ coding template with utility functions and solution class"
	},
	"cppcompete2": {
		"prefix": "cppcompete2",
		"body": [
			"/*",
			"    ॐ नमः शिवाय | ",
			"*/",
			"",
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"",
			"//#define int            long long int",
			"#define F              first",
			"#define S              second",
			"#define pb             push_back",
			"#define si             set <int>",
			"#define vi             vector <int>",
			"#define pii            pair <int, int>",
			"#define vpi            vector <pii>",
			"#define vpp            vector <pair<int, pii>>",
			"#define mii            map <int, int>",
			"#define mpi            map <pii, int>",
			"#define spi            set <pii>",
			"#define endl           \"\\n\"",
			"#define sz(x)          ((int) x.size())",
			"#define all(p)         p.begin(), p.end()",
			"//#define double         long double",
			"#define que_max        priority_queue <int>",
			"#define que_min        priority_queue <int, vi, greater<int>>",
			"#define bug(...)       __f (#__VA_ARGS__, __VA_ARGS__)",
			"#define print(a)       for(auto x : a) cout << x << \" \"; cout << endl",
			"#define print1(a)      for(auto x : a) cout << x.F << \" \" << x.S << endl",
			"#define print2(a,x,y)  for(int i = x; i < y; i++) cout<< a[i]<< \" \"; cout << endl",
			"",
			"inline int power(int a, int b)",
			"{",
			"    int x = 1;",
			"    while (b)",
			"    {",
			"        if (b & 1) x *= a;",
			"        a *= a;",
			"        b >>= 1;",
			"    }",
			"    return x;",
			"}",
			"",
			"template <typename Arg1>",
			"void __f (const char* name, Arg1&& arg1) { cout << name << \" : \" << arg1 << endl; }",
			"template <typename Arg1, typename... Args>",
			"void __f (const char* names, Arg1&& arg1, Args&&... args)",
			"{",
			"    const char* comma = strchr (names + 1, ',');",
			"    cout.write (names, comma - names) << \" : \" << arg1 << \" | \"; __f (comma + 1, args...);",
			"}",
			"",
			"const int N = 200005;",
			"",
			"void solve() {",
			"    int n, m;",
			"    cin >> n >> m;",
			"    bug(n, m);",
			"}",
			"",
			"int32_t main()",
			"{",
			"    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);",
			"",
			"#ifndef ONLINE_JUDGE",
			"    freopen(\"input.txt\",  \"r\",  stdin);",
			"    freopen(\"output.txt\", \"w\", stdout);",
			"#endif",
			"",
			"    clock_t z = clock();",
			"",
			"    int t = 1;",
			"    // cin >> t;",
			"    while (t--) solve();",
			"",
			"    cerr << \"Run Time : \" << ((double)(clock() - z) / CLOCKS_PER_SEC);",
			"",
			"    return 0;",
			"}"
		],
		"description": "C++ coding template with utility functions and solution class"
	},
	"cppprintvector": {
		"prefix": "cppprintvector",
		"body": [
			"template <typename T>",
			"void printVector(const vector<T> &vect) {",
			"    for (const auto &element : vect) {",
			"        cout << element << \" \";",
			"    }",
			"    cout << endl;",
			"}"
		],
		"description": "C++ function to print a vector"
	}
}